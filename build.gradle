buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = '1.1.0'
group = 'com.aeonlucid.discordsync'
archivesBaseName = 'discordsync'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'official', version: '1.18.2'
    runs {
        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                discordsync {
                    source sourceSets.main
                }
            }
        }
    }
}

// Configure all runs with the following
minecraft.runs.all {
    // Set the minecraft_classpath token to the paths of all jars in the library configuration
    // This is added with the actual Minecraft classpath to get the real classpath information later on
    lazyToken('minecraft_classpath') {
        configurations.shade.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.48'

    shade 'net.dv8tion:JDA:5.0.0-alpha.22'
    shade 'club.minnced:discord-webhooks:0.8.2'
    shade 'org.slf4j:slf4j-simple:2.0.3'
}

jar {
    manifest {
        attributes([
            "Maven-Artifact" : "${project.group}:${project.archivesBaseName}:${project.version}",
            "Timestamp" : System.currentTimeMillis(),
            "Specification-Title": "discordsync",
            "Specification-Vendor": "AeonLucid",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"AeonLucid",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

shadowJar {
    archiveFileName = "discordsync-${project.version}-forge.jar"
    configurations = [project.configurations.shade]

    // https://imperceptiblethoughts.com/shadow/configuration/relocation/#filtering-relocation
    def packageShadow = 'com.aeonlucid.discordsync.shadow'
    def packages = [
            'club.minnced',
            'com.fasterxml',
            'com.iwebpp',
            'com.neovisionaries',
            'gnu.trove',
            'javax.annotation',
            'net.dv8tion',
            'okhttp3',
            'okio',
            'org.apache.commons.collections4',
            'org.intellij.lang',
            'org.jetbrains.annotations',
            'org.json',
            'org.slf4j',
            'kotlin',
            'tomp2p',
            'com.sun'
    ]

    exclude('META-INF/services/**')

    for (p in packages) {
        relocate p, packageShadow + "." + p
    }

    // https://imperceptiblethoughts.com/shadow/configuration/minimizing/
    minimize()
}

artifacts {
    archives shadowJar
    shadow shadowJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
